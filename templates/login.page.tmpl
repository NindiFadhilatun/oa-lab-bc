<!doctype html>
<!--suppress HtmlFormInputWithoutLabel, JSUnresolvedVariable -->
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>e-BLBC</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.8/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="/static/css/login.css">

</head>
<body>
<div class="login-box">
    <h2>Office Automation BLBC</h2>
    <form>
        <div class="user-box">
            <input type="text" name="" required="">
            <label>Username</label>
        </div>
        <div class="user-box pass">
            <input type="password" name="" required="">
            <label>Password</label>
        </div>
        <div class="row">
            <div class="column" id="loginButton">
                <a href="#">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    Login
                </a>
            </div>
            <div class="the-amazing-toggle column">
                <input class="ios-toggle" type="checkbox" id="toggly">
                <label class="ios-label" for="toggly">
                    <i></i>
                </label>
            </div>
        </div>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.8/dist/sweetalert2.min.js"></script>
<script>
    document.getElementById("loginButton").addEventListener("click", function () {
        modeSave();
        const Toast = Swal.mixin({
            toast: true,
            position: 'top',
            showConfirmButton: false,
            timer: 1000,
            timerProgressBar: false,
            didOpen: () => {
                setInterval(() => {
                    if (parseInt(Swal.getTimerLeft()) <= 300) {
                        window.open("/home", "_self")
                    }
                }, 50)
            }
        })

        Toast.fire({
            icon: "success",
            title: "Signed in Successfully"
        })
    })

    function modeSave() {
        if (typeof(Storage) !== "undefined") {
            if(body.classList.contains("dark")){
                localStorage.setItem("oa-blbc-mode", "dark");
            }else{
                localStorage.setItem("oa-blbc-mode", "light");
            }
        }
    }

    const body = document.querySelector('body');
    let modeSwitch = document.getElementById("toggly")
    modeSwitch.addEventListener("click", function () {
        body.classList.toggle("dark");
        modeSave();
    })

    if (typeof(Storage) !== "undefined") {
        if (localStorage.getItem("oa-blbc-mode")) {
            modeSwitch.checked = localStorage.getItem("oa-blbc-mode") === "dark";
        }
    }

    if (modeSwitch.checked === true) {
        if (!body.classList.contains("dark")) {
            body.classList.add("dark");
        }
    }
</script>
</body>
</html>
